#!/bin/bash
set -Euo pipefail

YADM_DIR="~/.config/yadm"

pprint() {
  printf "==========$1==========\n"
  read -p "Press enter to continue"
}

mvdir() {
  [ -d "$1" ] && mv "$1" "$1".old
}

install_package() {
  if grep -iq "arch" /etc/*release && ! which yay >/dev/null 2>&1; then
    pprint "Arch detected. Installing yay"
    sudo pacman -Sy yay
  fi
  case $(uname) in
  Linux)
    LINUX=1
    which apt >/dev/null 2>&1 && sudo apt update && sudo apt -y install $* && return 0
    which yay >/dev/null 2>&1 && yay -Sy $* && return 0
    which pacman >/dev/null 2>&1 && sudo pacman -Sy $* && return 0
    which yum >/dev/null 2>&1 && sudo yum update && sudo yum -y install $* && return 0
    which zypper >/dev/null 2>&1 && zypper install $* && return 0
    which xbps-install >/dev/null 2>&1 && xbps-install $* && return 0
    which dnf >/dev/null 2>&1 && dnf install $* && return 0
    which pkg_add >/dev/null 2>&1 && pkg_add $* && return 0
    which eopkg >/dev/null 2>&1 && eopkg it $* && return 0
    which apk >/dev/null 2>&1 && apk add $* && return 0
    ;;
  Darwin)
    DARWIN=1
    which brew >/dev/null 2>&1 && brew install $* && return 0
    which port >/dev/null 2>&1 && sudo port install $* && return 0
    ;;
  *)
    pprint "Unknown OS!"
    return 1
    ;;
  esac
  return 1
}

# Install ZSH
pprint "Installing ZSH"
exit 1
TO_INSTALL=(zsh)
if uname | grep -iq "darwin" -; then
  TO_INSTALL=(zsh zsh-completions)
fi
if ! install_package ${TO_INSTALL[@]}; then
  pprint "Unable to install ZSH! Quitting..."
  exit 1
fi

chsh -s $(which zsh)

# replace dotfile remote with ssh url
pprint "Switching remotes to ssh"
yadm remote set-url origin git@github.com:minchingtonak/dots.git
yadm remote -v

# Clone into submodules
pprint "Cloning into submodules"
for f in $(cat $YADM_DIR/.gitmodules | grep -iPo 'path = \K.*'); do
  mvdir "$f"
done
yadm submodule init && yadm submodule update

# Install ohmyzsh
pprint "Installing OhMyZsh"
RUNZSH=no CHSH=no sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"

if [ -f ~/.zshrc.pre-oh-my-zsh ]; then
  pprint "Cleaning up OMZ install..."
  rm -f .zshrc
  mv .zshrc.pre-oh-my-zsh .zshrc
fi

# Configure git credentials
pprint "Configuring git credentials"
printf "user.name: "
read name
git config --global user.name "$name"
printf "user.email: "
read email
git config --global user.email "$email"

VAR_FILE="$YADM_DIR/global_vars"

printf "Working directory ($HOME/workspace if left blank): "
read response
if [ -z "$response" ]; then
  WORKSPACE="$HOME/workspace"
else
  WORKSPACE="$response"
fi
echo "export WORKSPACE=\"$WORKSPACE\"" >>"$VAR_FILE"
if [ ! -d "$WORKSPACE" ]; then
  mkdir -p "$WORKSPACE"
fi

printf "Uniqname: "
read response
echo "export UNIQNAME=\"$response\"" >>"$VAR_FILE"

# Install OhMyZsh plugins
pprint "Installing OhMyZsh plugins"
zsh -c "$YADM_DIR/scripts/zsh-plugins.sh"

echo "Dotfiles setup finished successfully!"
echo "Please log out and log back in to start using ZSH"
